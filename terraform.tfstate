{
  "version": 4,
  "terraform_version": "1.1.4",
  "serial": 72,
  "lineage": "d3fda9f8-d133-4c80-9378-b58041efa70a",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "google_dataproc_cluster",
      "name": "cluster1",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cluster_config": [
              {
                "autoscaling_config": [],
                "bucket": "dataproc-staging-europe-west1-62089237696-rnyrqvhb",
                "encryption_config": [],
                "gce_cluster_config": [
                  {
                    "internal_ip_only": false,
                    "metadata": {
                      "hive-metastore-instance": "vertical-wall-347012:europe-west1:vertical-wall-347012-hive-metastore-78219"
                    },
                    "network": "https://www.googleapis.com/compute/v1/projects/vertical-wall-347012/global/networks/default",
                    "service_account": "",
                    "service_account_scopes": [
                      "https://www.googleapis.com/auth/cloud-platform"
                    ],
                    "shielded_instance_config": [],
                    "subnetwork": "",
                    "tags": null,
                    "zone": "europe-west1-d"
                  }
                ],
                "initialization_action": [
                  {
                    "script": "gs://vertical-wall-347012-artif/dataproc/cloud-sql-proxy.sh",
                    "timeout_sec": 500
                  }
                ],
                "master_config": [
                  {
                    "accelerators": [],
                    "disk_config": [
                      {
                        "boot_disk_size_gb": 500,
                        "boot_disk_type": "pd-standard",
                        "num_local_ssds": 0
                      }
                    ],
                    "image_uri": "https://www.googleapis.com/compute/v1/projects/cloud-dataproc/global/images/dataproc-1-3-deb10-20210715-000000-rc02",
                    "instance_names": [
                      "vertical-wall-347012-cluster1-m"
                    ],
                    "machine_type": "n1-standard-4",
                    "min_cpu_platform": "AUTOMATIC",
                    "num_instances": 1
                  }
                ],
                "preemptible_worker_config": [
                  {
                    "disk_config": [
                      {
                        "boot_disk_size_gb": null,
                        "boot_disk_type": null,
                        "num_local_ssds": null
                      }
                    ],
                    "instance_names": [],
                    "num_instances": 0,
                    "preemptibility": ""
                  }
                ],
                "security_config": [],
                "software_config": [
                  {
                    "image_version": "1.3.95-debian10",
                    "optional_components": null,
                    "override_properties": {
                      "hive:hive.metastore.warehouse.dir": "gs://vertical-wall-347012-warehouse/datasets"
                    },
                    "properties": {
                      "capacity-scheduler:yarn.scheduler.capacity.root.default.ordering-policy": "fair",
                      "core:fs.gs.block.size": "134217728",
                      "core:fs.gs.metadata.cache.enable": "false",
                      "core:hadoop.ssl.enabled.protocols": "TLSv1,TLSv1.1,TLSv1.2",
                      "distcp:mapreduce.map.java.opts": "-Xmx768m",
                      "distcp:mapreduce.map.memory.mb": "1024",
                      "distcp:mapreduce.reduce.java.opts": "-Xmx768m",
                      "distcp:mapreduce.reduce.memory.mb": "1024",
                      "hdfs:dfs.datanode.address": "0.0.0.0:9866",
                      "hdfs:dfs.datanode.http.address": "0.0.0.0:9864",
                      "hdfs:dfs.datanode.https.address": "0.0.0.0:9865",
                      "hdfs:dfs.datanode.ipc.address": "0.0.0.0:9867",
                      "hdfs:dfs.namenode.handler.count": "20",
                      "hdfs:dfs.namenode.http-address": "0.0.0.0:9870",
                      "hdfs:dfs.namenode.https-address": "0.0.0.0:9871",
                      "hdfs:dfs.namenode.lifeline.rpc-address": "vertical-wall-347012-cluster1-m:8050",
                      "hdfs:dfs.namenode.secondary.http-address": "0.0.0.0:9868",
                      "hdfs:dfs.namenode.secondary.https-address": "0.0.0.0:9869",
                      "hdfs:dfs.namenode.service.handler.count": "10",
                      "hdfs:dfs.namenode.servicerpc-address": "vertical-wall-347012-cluster1-m:8051",
                      "hive:hive.metastore.warehouse.dir": "gs://vertical-wall-347012-warehouse/datasets",
                      "mapred-env:HADOOP_JOB_HISTORYSERVER_HEAPSIZE": "3840",
                      "mapred:mapreduce.job.maps": "21",
                      "mapred:mapreduce.job.reduce.slowstart.completedmaps": "0.95",
                      "mapred:mapreduce.job.reduces": "7",
                      "mapred:mapreduce.map.cpu.vcores": "1",
                      "mapred:mapreduce.map.java.opts": "-Xmx2457m",
                      "mapred:mapreduce.map.memory.mb": "3072",
                      "mapred:mapreduce.reduce.cpu.vcores": "1",
                      "mapred:mapreduce.reduce.java.opts": "-Xmx2457m",
                      "mapred:mapreduce.reduce.memory.mb": "3072",
                      "mapred:mapreduce.task.io.sort.mb": "256",
                      "mapred:yarn.app.mapreduce.am.command-opts": "-Xmx2457m",
                      "mapred:yarn.app.mapreduce.am.resource.cpu-vcores": "1",
                      "mapred:yarn.app.mapreduce.am.resource.mb": "3072",
                      "spark-env:SPARK_DAEMON_MEMORY": "3840m",
                      "spark:spark.driver.maxResultSize": "1920m",
                      "spark:spark.driver.memory": "3840m",
                      "spark:spark.executor.cores": "2",
                      "spark:spark.executor.instances": "2",
                      "spark:spark.executor.memory": "5586m",
                      "spark:spark.executorEnv.OPENBLAS_NUM_THREADS": "1",
                      "spark:spark.scheduler.mode": "FAIR",
                      "spark:spark.sql.cbo.enabled": "true",
                      "spark:spark.yarn.am.memory": "640m",
                      "yarn-env:YARN_NODEMANAGER_HEAPSIZE": "3840",
                      "yarn-env:YARN_RESOURCEMANAGER_HEAPSIZE": "3840",
                      "yarn-env:YARN_TIMELINESERVER_HEAPSIZE": "3840",
                      "yarn:yarn.nodemanager.resource.cpu-vcores": "4",
                      "yarn:yarn.nodemanager.resource.memory-mb": "12288",
                      "yarn:yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs": "86400",
                      "yarn:yarn.scheduler.maximum-allocation-mb": "12288",
                      "yarn:yarn.scheduler.minimum-allocation-mb": "1024"
                    }
                  }
                ],
                "staging_bucket": "",
                "temp_bucket": "dataproc-temp-europe-west1-62089237696-xzgsfelj",
                "worker_config": [
                  {
                    "accelerators": [],
                    "disk_config": [
                      {
                        "boot_disk_size_gb": 500,
                        "boot_disk_type": "pd-standard",
                        "num_local_ssds": 0
                      }
                    ],
                    "image_uri": "https://www.googleapis.com/compute/v1/projects/cloud-dataproc/global/images/dataproc-1-3-deb10-20210715-000000-rc02",
                    "instance_names": [
                      "vertical-wall-347012-cluster1-w-0",
                      "vertical-wall-347012-cluster1-w-1"
                    ],
                    "machine_type": "n1-standard-4",
                    "min_cpu_platform": "AUTOMATIC",
                    "num_instances": 2
                  }
                ]
              }
            ],
            "graceful_decommission_timeout": "0s",
            "id": "projects/vertical-wall-347012/regions/europe-west1/clusters/vertical-wall-347012-cluster1",
            "labels": {
              "goog-dataproc-cluster-name": "vertical-wall-347012-cluster1",
              "goog-dataproc-cluster-uuid": "337cf64e-707a-4941-9de4-549745f04692",
              "goog-dataproc-location": "europe-west1"
            },
            "name": "vertical-wall-347012-cluster1",
            "project": "vertical-wall-347012",
            "region": "europe-west1",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNzAwMDAwMDAwMDAwLCJkZWxldGUiOjI3MDAwMDAwMDAwMDAsInVwZGF0ZSI6MjcwMDAwMDAwMDAwMH19",
          "dependencies": [
            "google_sql_database_instance.hive_metastore_instance",
            "google_sql_user.sql_user",
            "google_storage_bucket.warehouse"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_dataproc_job",
      "name": "cluster1_pyspark",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "driver_controls_files_uri": "gs://dataproc-staging-europe-west1-62089237696-rnyrqvhb/google-cloud-dataproc-metainfo/337cf64e-707a-4941-9de4-549745f04692/jobs/ed75a55a-9d6e-4f07-90d8-8ba283ef421e/",
            "driver_output_resource_uri": "gs://dataproc-staging-europe-west1-62089237696-rnyrqvhb/google-cloud-dataproc-metainfo/337cf64e-707a-4941-9de4-549745f04692/jobs/ed75a55a-9d6e-4f07-90d8-8ba283ef421e/driveroutput",
            "force_delete": true,
            "hadoop_config": [],
            "hive_config": [],
            "id": "projects/vertical-wall-347012/regions/europe-west1/jobs/ed75a55a-9d6e-4f07-90d8-8ba283ef421e",
            "labels": null,
            "pig_config": [],
            "placement": [
              {
                "cluster_name": "vertical-wall-347012-cluster1",
                "cluster_uuid": "337cf64e-707a-4941-9de4-549745f04692"
              }
            ],
            "presto_config": [],
            "project": "vertical-wall-347012",
            "pyspark_config": [
              {
                "archive_uris": null,
                "args": null,
                "file_uris": null,
                "jar_file_uris": null,
                "logging_config": [
                  {
                    "driver_log_levels": {}
                  }
                ],
                "main_python_file_uri": "gs://dataproc-examples-2f10d78d114f6aaec76462e3c310f31f/src/pyspark/hello-world/hello-world.py",
                "properties": {
                  "spark.logConf": "true"
                },
                "python_file_uris": null
              }
            ],
            "reference": [
              {
                "job_id": "ed75a55a-9d6e-4f07-90d8-8ba283ef421e"
              }
            ],
            "region": "europe-west1",
            "scheduling": [],
            "spark_config": [],
            "sparksql_config": [],
            "status": [
              {
                "details": "",
                "state": "RUNNING",
                "state_start_time": "2022-06-24T13:09:28.809506Z",
                "substate": ""
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "google_dataproc_cluster.cluster1",
            "google_sql_database_instance.hive_metastore_instance",
            "google_sql_user.sql_user",
            "google_storage_bucket.warehouse"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_dataproc_job",
      "name": "cluster1_sparkpi",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "driver_controls_files_uri": "gs://dataproc-staging-europe-west1-62089237696-rnyrqvhb/google-cloud-dataproc-metainfo/337cf64e-707a-4941-9de4-549745f04692/jobs/84cb780c-cd27-47dc-b8d5-3f587e10af86/",
            "driver_output_resource_uri": "gs://dataproc-staging-europe-west1-62089237696-rnyrqvhb/google-cloud-dataproc-metainfo/337cf64e-707a-4941-9de4-549745f04692/jobs/84cb780c-cd27-47dc-b8d5-3f587e10af86/driveroutput",
            "force_delete": true,
            "hadoop_config": [],
            "hive_config": [],
            "id": "projects/vertical-wall-347012/regions/europe-west1/jobs/84cb780c-cd27-47dc-b8d5-3f587e10af86",
            "labels": null,
            "pig_config": [],
            "placement": [
              {
                "cluster_name": "vertical-wall-347012-cluster1",
                "cluster_uuid": "337cf64e-707a-4941-9de4-549745f04692"
              }
            ],
            "presto_config": [],
            "project": "vertical-wall-347012",
            "pyspark_config": [],
            "reference": [
              {
                "job_id": "84cb780c-cd27-47dc-b8d5-3f587e10af86"
              }
            ],
            "region": "europe-west1",
            "scheduling": [],
            "spark_config": [
              {
                "archive_uris": null,
                "args": [
                  "1000"
                ],
                "file_uris": null,
                "jar_file_uris": [
                  "file:///usr/lib/spark/examples/jars/spark-examples.jar"
                ],
                "logging_config": [
                  {
                    "driver_log_levels": {
                      "root": "INFO"
                    }
                  }
                ],
                "main_class": "org.apache.spark.examples.SparkPi",
                "main_jar_file_uri": "",
                "properties": {
                  "spark.logConf": "true"
                }
              }
            ],
            "sparksql_config": [],
            "status": [
              {
                "details": "",
                "state": "RUNNING",
                "state_start_time": "2022-06-24T13:09:28.804213Z",
                "substate": ""
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "google_dataproc_cluster.cluster1",
            "google_sql_database_instance.hive_metastore_instance",
            "google_sql_user.sql_user",
            "google_storage_bucket.warehouse"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_sql_database_instance",
      "name": "hive_metastore_instance",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "clone": [],
            "connection_name": "vertical-wall-347012:europe-west1:vertical-wall-347012-hive-metastore-78219",
            "database_version": "MYSQL_5_7",
            "deletion_protection": true,
            "first_ip_address": "35.195.226.167",
            "id": "vertical-wall-347012-hive-metastore-78219",
            "ip_address": [
              {
                "ip_address": "35.195.226.167",
                "time_to_retire": "",
                "type": "PRIMARY"
              }
            ],
            "master_instance_name": "",
            "name": "vertical-wall-347012-hive-metastore-78219",
            "private_ip_address": "",
            "project": "vertical-wall-347012",
            "public_ip_address": "35.195.226.167",
            "region": "europe-west1",
            "replica_configuration": [],
            "restore_backup_context": [],
            "root_password": null,
            "self_link": "https://sqladmin.googleapis.com/sql/v1beta4/projects/vertical-wall-347012/instances/vertical-wall-347012-hive-metastore-78219",
            "server_ca_cert": [
              {
                "cert": "-----BEGIN CERTIFICATE-----\nMIIDfzCCAmegAwIBAgIBADANBgkqhkiG9w0BAQsFADB3MS0wKwYDVQQuEyQwZTc1\nNjM3Zi0xYjJiLTQ2M2QtYmU0My1mN2FiOGY4ZjRjZWIxIzAhBgNVBAMTGkdvb2ds\nZSBDbG91ZCBTUUwgU2VydmVyIENBMRQwEgYDVQQKEwtHb29nbGUsIEluYzELMAkG\nA1UEBhMCVVMwHhcNMjIwNjI0MTI1NzM2WhcNMzIwNjIxMTI1ODM2WjB3MS0wKwYD\nVQQuEyQwZTc1NjM3Zi0xYjJiLTQ2M2QtYmU0My1mN2FiOGY4ZjRjZWIxIzAhBgNV\nBAMTGkdvb2dsZSBDbG91ZCBTUUwgU2VydmVyIENBMRQwEgYDVQQKEwtHb29nbGUs\nIEluYzELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQDFGEQcuyp+JaJr+SJPHeXqjZTcaFjEqxfkX3ixwFA9dEBQUXofo2aCQQ13/176\nYxFfF8w9wUxzt36L8YoLGApN+rRTnlmu/ett5oGXRZDAtAKxtCbtWDyaUS2kZ+tq\nbC35tYZQvaCC/NS9UnMbYa0Br+2YdaRcW/hF+s0g93oDRoJdY4NZAdjeA+IBa5kL\nesNwvwgrh9KnjW/SAUxvmunleXEetvkYRqOGcyoD/v7V3XkXJ605JOUr5RuPdJnC\ncNh/TUcF70XZgE9AOINOb4oQd1XQHembO6EH0kjiNkhzpEDJ6XmoyyTfTnkraReo\n27rWKUibh6o9ZlQ+0QzHJpX3AgMBAAGjFjAUMBIGA1UdEwEB/wQIMAYBAf8CAQAw\nDQYJKoZIhvcNAQELBQADggEBAGYr6ueBg0O/DINGBAQXUj12eXC40am5TSBb1rCv\nu3a6vzGDpsyDGfum7YABJORi9pUFaNjI5syczpQRSUCVUZ0N0HEnrZchleIuCdjN\n+eXZOfwRxCpfR9m8rB4QqpwNLY+Fmt5OOpTyFB5OkGHN2ciDRZA6b3DiXesaPekX\nz3W43K6AKipjDnmxUgCUcOlJWYRBBYP1hubRZVVuXRq2p0t0tRRFlNLAZdtkIFlG\nsOhFzrO+w5NtaAg0h2FSKVqf5efWtM8p6Ai2Y3ld89QeeNT/3H0IVAX1z2POo9rV\n+v9e0SBPwV2lKAUTc7k8CiP9czYkFm1/mWsaJRAHtz8Dg+4=\n-----END CERTIFICATE-----",
                "common_name": "C=US,O=Google\\, Inc,CN=Google Cloud SQL Server CA,dnQualifier=0e75637f-1b2b-463d-be43-f7ab8f8f4ceb",
                "create_time": "2022-06-24T12:57:36.727Z",
                "expiration_time": "2032-06-21T12:58:36.727Z",
                "sha1_fingerprint": "45cf6952ed7703ac6bfc06c96f573b52026aa56f"
              }
            ],
            "service_account_email_address": "p62089237696-wfw1un@gcp-sa-cloud-sql.iam.gserviceaccount.com",
            "settings": [
              {
                "activation_policy": "ALWAYS",
                "active_directory_config": [],
                "availability_type": "ZONAL",
                "backup_configuration": [
                  {
                    "backup_retention_settings": [
                      {
                        "retained_backups": 7,
                        "retention_unit": "COUNT"
                      }
                    ],
                    "binary_log_enabled": false,
                    "enabled": false,
                    "location": "",
                    "point_in_time_recovery_enabled": false,
                    "start_time": "09:00",
                    "transaction_log_retention_days": 7
                  }
                ],
                "collation": "",
                "database_flags": [],
                "disk_autoresize": true,
                "disk_autoresize_limit": 0,
                "disk_size": 10,
                "disk_type": "PD_SSD",
                "insights_config": [],
                "ip_configuration": [
                  {
                    "allocated_ip_range": "",
                    "authorized_networks": [],
                    "ipv4_enabled": true,
                    "private_network": "",
                    "require_ssl": false
                  }
                ],
                "location_preference": [
                  {
                    "follow_gae_application": "",
                    "zone": "europe-west1-d"
                  }
                ],
                "maintenance_window": [],
                "pricing_plan": "PER_USE",
                "tier": "db-n1-standard-1",
                "user_labels": {},
                "version": 1
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "random_integer.hive_metastore_number"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_sql_user",
      "name": "sql_user",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "deletion_policy": null,
            "host": "%",
            "id": "root/%/vertical-wall-347012-hive-metastore-78219",
            "instance": "vertical-wall-347012-hive-metastore-78219",
            "name": "root",
            "password": "changeme",
            "project": "vertical-wall-347012",
            "timeouts": null,
            "type": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "google_sql_database_instance.hive_metastore_instance",
            "random_integer.hive_metastore_number"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "hive_metastore_state_data_artif_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cors": [],
            "default_event_based_hold": false,
            "encryption": [],
            "force_destroy": true,
            "id": "vertical-wall-347012-artif",
            "labels": {},
            "lifecycle_rule": [],
            "location": "EU",
            "logging": [],
            "name": "vertical-wall-347012-artif",
            "project": "vertical-wall-347012",
            "requester_pays": false,
            "retention_policy": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/vertical-wall-347012-artif",
            "storage_class": "MULTI_REGIONAL",
            "timeouts": null,
            "uniform_bucket_level_access": false,
            "url": "gs://vertical-wall-347012-artif",
            "versioning": [],
            "website": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsInJlYWQiOjI0MDAwMDAwMDAwMCwidXBkYXRlIjoyNDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "warehouse",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cors": [],
            "default_event_based_hold": false,
            "encryption": [],
            "force_destroy": false,
            "id": "vertical-wall-347012-warehouse",
            "labels": {},
            "lifecycle_rule": [],
            "location": "EU",
            "logging": [],
            "name": "vertical-wall-347012-warehouse",
            "project": "vertical-wall-347012",
            "requester_pays": false,
            "retention_policy": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/vertical-wall-347012-warehouse",
            "storage_class": "STANDARD",
            "timeouts": null,
            "uniform_bucket_level_access": false,
            "url": "gs://vertical-wall-347012-warehouse",
            "versioning": [],
            "website": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsInJlYWQiOjI0MDAwMDAwMDAwMCwidXBkYXRlIjoyNDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket_object",
      "name": "cloud_sql_proxy_script",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "vertical-wall-347012-artif",
            "cache_control": "",
            "content": "#!/bin/bash\n# Copyright 2016 Google, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This init script installs a cloud-sql-proxy on each node in the cluster, and\n# uses that proxy to expose TCP proxies of one or more CloudSQL instances.\n# One of these instances is used for the clusters Hive Metastore.\n\n# Do not use \"set -x\" to avoid printing passwords in clear in the logs\nset -euo pipefail\n\n# Whether to configure the Hive metastore to point to a Cloud SQL database.\n# This is not required for Hive \u0026 Spark I/O.\n\nHIVE_USER_DEFAULT='hive'\nHIVE_PASSWORD_DEFAULT='hive'\nSQL_USER_DEFAULT='root'\nSQL_PASSWORD_DEFAULT='changeme'\n\nreadonly enable_cloud_sql_metastore=\"$(/usr/share/google/get_metadata_value attributes/enable-cloud-sql-hive-metastore || echo 'true')\"\n\n# Whether to enable the proxy on workers. This is not necessary for the\n# Metastore, but is required for Hive \u0026 Spark I/O.\nreadonly enable_proxy_on_workers=\"$(/usr/share/google/get_metadata_value attributes/enable-cloud-sql-proxy-on-workers || echo 'true')\"\n\n# Database user to use to access metastore.\nreadonly db_hive_user=\"$(/usr/share/google/get_metadata_value attributes/db-hive-user || echo $HIVE_USER_DEFAULT)\"\n\nreadonly db_admin_user=\"$(/usr/share/google/get_metadata_value attributes/db-admin-user || echo $SQL_USER_DEFAULT)\"\n\nreadonly kms_key_uri=\"$(/usr/share/google/get_metadata_value attributes/kms-key-uri)\"\n\n# Database admin user password used to create the metastore database and user.\nreadonly db_admin_password_uri=\"$(/usr/share/google/get_metadata_value attributes/db-admin-password-uri)\"\nif [[ -n \"${db_admin_password_uri}\" ]]; then\n  # Decrypt password\n  readonly db_admin_password=\"$(gsutil cat $db_admin_password_uri | \\\n    gcloud kms decrypt \\\n    --ciphertext-file - \\\n    --plaintext-file - \\\n    --key $kms_key_uri)\"\nelse\n  readonly db_admin_password=$SQL_PASSWORD_DEFAULT\nfi\nif [ \"${db_admin_password}\" == \"\" ]; then\n    readonly db_admin_password_parameter=\"\"\nelse\n    readonly db_admin_password_parameter=\"-p${db_admin_password}\"\nfi\n\n# Database password to use to access metastore.\nreadonly db_hive_password_uri=\"$(/usr/share/google/get_metadata_value attributes/db-hive-password-uri)\"\nif [[ -n \"${db_hive_password_uri}\" ]]; then\n  # Decrypt password\n  readonly db_hive_password=\"$(gsutil cat $db_hive_password_uri | \\\n    gcloud kms decrypt \\\n    --ciphertext-file - \\\n    --plaintext-file - \\\n    --key $kms_key_uri)\"\nelse\n  readonly db_hive_password=$HIVE_PASSWORD_DEFAULT\nfi\nif [ \"${db_hive_password}\" == \"\" ]; then\n    readonly db_hive_password_parameter=\"\"\nelse\n    readonly db_hive_password_parameter=\"-p${db_hive_password}\"\nfi\n\nreadonly PROXY_DIR='/var/run/cloud_sql_proxy'\nreadonly PROXY_BIN='/usr/local/bin/cloud_sql_proxy'\nreadonly INIT_SCRIPT='/usr/lib/systemd/system/cloud-sql-proxy.service'\nreadonly ADDITIONAL_INSTANCES_KEY='attributes/additional-cloud-sql-instances'\n\nfunction err() {\n  echo \"[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $@\" \u003e\u00262\n  return 1\n}\n\n# Helper to run any command with Fibonacci backoff.\n# If all retries fail, returns last attempt's exit code.\n# Args: \"$@\" is the command to run.\nfunction run_with_retries() {\n  local retry_backoff=(1 1 2 3 5 8 13 21 34 55 89 144)\n  local -a cmd=(\"$@\")\n  echo \"About to run '${cmd[*]}' with retries...\"\n\n  local update_succeeded=0\n  for ((i = 0; i \u003c ${#retry_backoff[@]}; i++)); do\n    if \"${cmd[@]}\"; then\n      update_succeeded=1\n      break\n    else\n      local sleep_time=${retry_backoff[$i]}\n      echo \"'${cmd[*]}' attempt $(( $i + 1 )) failed! Sleeping ${sleep_time}.\" \u003e\u00262\n      sleep ${sleep_time}\n    fi\n  done\n\n  if ! (( ${update_succeeded} )); then\n    echo \"Final attempt of '${cmd[*]}'...\"\n    # Let any final error propagate all the way out to any error traps.\n    \"${cmd[@]}\"\n  fi\n}\n\nfunction configure_proxy_flags() {\n  if [[ $enable_cloud_sql_metastore = \"true\" ]]; then\n    if [[ -z \"${metastore_instance}\" ]]; then\n      err 'Must specify hive-metastore-instance VM metadata'\n    elif ! [[ \"${metastore_instance}\" =~ .+:.+:.+ ]]; then\n      err 'hive-metastore-instance must be of form project:region:instance'\n    elif ! [[ \"${metastore_instance}\" =~ =tcp:[0-9]+$ ]]; then\n      metastore_instance+=\"=tcp:${metastore_proxy_port}\"\n    else\n      metastore_proxy_port=\"${metastore_instance##*:}\"\n    fi\n    proxy_instances_flags+=\" -instances=${metastore_instance}\"\n  fi\n\n  if [[ -n \"${additional_instances}\" ]]; then\n    # Pass additional instances straight to the proxy.\n    proxy_instances_flags+=\" -instances_metadata=instance/${ADDITIONAL_INSTANCES_KEY}\"\n  fi\n}\n\nfunction install_cloud_sql_proxy() {\n  # Install proxy.\n  wget -q https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 \\\n    || err 'Unable to download cloud-sql-proxy binary'\n  mv cloud_sql_proxy.linux.amd64 ${PROXY_BIN}\n  chmod +x ${PROXY_BIN}\n\n  mkdir -p ${PROXY_DIR}\n\n  # Install proxy as systemd service for reboot tolerance.\n  cat \u003c\u003c EOF \u003e ${INIT_SCRIPT}\n[Unit]\nDescription=Google Cloud SQL Proxy\nAfter=local-fs.target network-online.target\nAfter=google.service\nBefore=shutdown.target\n\n[Service]\nType=simple\nExecStart=${PROXY_BIN} \\\n  -dir=${PROXY_DIR} \\\n  ${proxy_instances_flags}\n\n[Install]\nWantedBy=multi-user.target\nEOF\n  chmod a+rw ${INIT_SCRIPT}\n  systemctl enable cloud-sql-proxy\n  systemctl start cloud-sql-proxy \\\n    || err 'Unable to start cloud-sql-proxy service'\n\n  run_with_retries nc -zv localhost ${metastore_proxy_port}\n\n  echo 'Cloud SQL Proxy installation succeeded' \u003e\u00262\n\n  if [[ $enable_cloud_sql_metastore = \"true\" ]]; then\n    # Update hive-site.xml\n    cat \u003c\u003c EOF \u003e hive-template.xml\n\u003c?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?\u003e\n\u003cconfiguration\u003e\n  \u003cproperty\u003e\n    \u003cname\u003ejavax.jdo.option.ConnectionURL\u003c/name\u003e\n    \u003cvalue\u003ejdbc:mysql://localhost:${metastore_proxy_port}/${metastore_db}\u003c/value\u003e\n    \u003cdescription\u003ethe URL of the MySQL database\u003c/description\u003e\n  \u003c/property\u003e\n  \u003cproperty\u003e\n    \u003cname\u003ejavax.jdo.option.ConnectionUserName\u003c/name\u003e\n    \u003cvalue\u003e${db_hive_user}\u003c/value\u003e\n  \u003c/property\u003e\n  \u003cproperty\u003e\n    \u003cname\u003ejavax.jdo.option.ConnectionPassword\u003c/name\u003e\n    \u003cvalue\u003e${db_hive_password}\u003c/value\u003e\n  \u003c/property\u003e\n\u003c/configuration\u003e\nEOF\n\n  bdconfig merge_configurations \\\n    --configuration_file /etc/hive/conf/hive-site.xml \\\n    --source_configuration_file hive-template.xml \\\n    --clobber\nfi\n}\n\n\nfunction configure_sql_client(){\n  # Configure mysql client to talk to metastore\n  cat \u003c\u003c EOF \u003e /etc/mysql/conf.d/cloud-sql-proxy.cnf\n[client]\nprotocol = tcp\nport = ${metastore_proxy_port}\nEOF\n\n  # Check if metastore is initialized.\n  if ! mysql -u \"${db_hive_user}\" \"${db_hive_password_parameter}\" -e ''; then\n    mysql -u \"${db_admin_user}\" \"${db_admin_password_parameter}\" -e \\\n      \"CREATE USER '${db_hive_user}' IDENTIFIED BY '${db_hive_password}';\"\n  fi\n  if mysql -u \"${db_hive_user}\" \"${db_hive_password_parameter}\" -e \"use ${metastore_db}\"; then\n    # Extract the warehouse URI.\n    HIVE_WAREHOURSE_URI=$(mysql -u \"${db_hive_user}\" \"${db_hive_password_parameter}\" -Nse \\\n      \"SELECT DB_LOCATION_URI FROM ${metastore_db}.DBS WHERE NAME = 'default';\")\n    bdconfig set_property \\\n      --name 'hive.metastore.warehouse.dir' \\\n      --value \"${HIVE_WAREHOURSE_URI}\" \\\n      --configuration_file /etc/hive/conf/hive-site.xml \\\n      --clobber\n  else\n    # Initialize database with current warehouse URI.\n    mysql -u \"${db_admin_user}\" \"${db_admin_password_parameter}\" -e \\\n      \"CREATE DATABASE ${metastore_db}; \\\n       GRANT ALL PRIVILEGES ON ${metastore_db}.* TO '${db_hive_user}';\"\n    /usr/lib/hive/bin/schematool -dbType mysql -initSchema \\\n      || err 'Failed to set mysql schema.'\n  fi\n\n  if ( systemctl is-enabled --quiet hive-metastore ); then\n    # Start metastore back up.\n    systemctl start hive-metastore \\\n      || err 'Unable to start hive-metastore service'\n  else\n    echo \"Service hive-metastore is not loaded\"\n  fi\n\n  # Validate it's functioning.\n  if ! hive -e 'SHOW TABLES;' \u003e\u0026 /dev/null; then\n    err 'Failed to bring up Cloud SQL Metastore'\n  fi\n  echo 'Cloud SQL Hive Metastore initialization succeeded' \u003e\u00262\n\n}\n\nfunction main() {\n\n  local role\n  role=\"$(/usr/share/google/get_metadata_value attributes/dataproc-role)\"\n\n  local metastore_instance\n  metastore_instance=\"$(/usr/share/google/get_metadata_value attributes/hive-metastore-instance || true)\"\n\n  local additional_instances\n  additional_instances=\"$(/usr/share/google/get_metadata_value ${ADDITIONAL_INSTANCES_KEY} || true)\"\n\n  local metastore_db\n  metastore_db=\"$(/usr/share/google/get_metadata_value attributes/hive-metastore-db || true)\"\n\n  # Name of CloudSQL instance to use for the metastore. Must already exist.\n  # Uncomment to hard code an instance. Metadata will still take precedence.\n  metastore_instance_default= # my-project:my-region:my-instance\n  metastore_instance=\"${metastore_instance:-${metastore_instance_default}}\"\n\n  # Name of MySQL database to use for the metastore. Will be created if\n  # it doesn't exist.\n\n  metastore_db=\"${metastore_db:-hive_metastore}\"\n\n  local metastore_proxy_port\n  metastore_proxy_port=\"$(/usr/share/google/get_metadata_value attributes/metastore-proxy-port || echo '3306')\"\n\n  # Validation\n  if [[ $enable_cloud_sql_metastore != \"true\" ]] \u0026\u0026 [[ -z \"${additional_instances}\" ]]; then\n    err 'No Cloud SQL instances to proxy'\n  fi\n\n  local proxy_instances_flags\n  proxy_instances_flags=''\n  configure_proxy_flags\n\n  if [[ \"${role}\" == 'Master' ]]; then\n    # Disable Hive Metastore and MySql Server.\n    if [[ $enable_cloud_sql_metastore = \"true\" ]]; then\n      if ( systemctl is-enabled --quiet hive-metastore ); then\n        # Stop hive-metastore if it is enabled\n        systemctl stop hive-metastore\n      else\n        echo \"Service hive-metastore is not enabled\"\n      fi\n      systemctl stop mysql\n      systemctl disable mysql\n    fi\n    install_cloud_sql_proxy\n    if [[ $enable_cloud_sql_metastore = \"true\" ]]; then\n      configure_sql_client\n    fi\n  else\n    # This part runs on workers.\n    # Run installation on workers when enable_proxy_on_workers is set.\n    if [[ $enable_proxy_on_workers = \"true\" ]]; then\n      install_cloud_sql_proxy\n    fi\n  fi\n\n}\n\nmain",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/plain; charset=utf-8",
            "crc32c": "SkJKuw==",
            "customer_encryption": [],
            "detect_md5hash": "cl8hfuPqhNzj+u6wwII6JQ==",
            "event_based_hold": false,
            "id": "vertical-wall-347012-artif-dataproc/cloud-sql-proxy.sh",
            "kms_key_name": "",
            "md5hash": "cl8hfuPqhNzj+u6wwII6JQ==",
            "media_link": "https://storage.googleapis.com/download/storage/v1/b/vertical-wall-347012-artif/o/dataproc%2Fcloud-sql-proxy.sh?generation=1656075433593487\u0026alt=media",
            "metadata": {},
            "name": "dataproc/cloud-sql-proxy.sh",
            "output_name": "dataproc/cloud-sql-proxy.sh",
            "self_link": "https://www.googleapis.com/storage/v1/b/vertical-wall-347012-artif/o/dataproc%2Fcloud-sql-proxy.sh",
            "source": null,
            "storage_class": "MULTI_REGIONAL",
            "temporary_hold": false,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_storage_bucket.hive_metastore_state_data_artif_bucket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_integer",
      "name": "hive_metastore_number",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "78219",
            "keepers": null,
            "max": 99999,
            "min": 10000,
            "result": 78219,
            "seed": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
